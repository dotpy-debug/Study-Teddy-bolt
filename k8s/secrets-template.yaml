# ============================================
# Study Teddy - Kubernetes Secrets Template
# ============================================
# IMPORTANT: This is a template file. Replace all placeholder values
# with actual secrets before applying to the cluster.
# NEVER commit actual secrets to version control!

# ============================================
# Staging Secrets
# ============================================
apiVersion: v1
kind: Secret
metadata:
  name: studyteddy-staging-secrets
  namespace: studyteddy-staging
  labels:
    app: studyteddy
    environment: staging
type: Opaque
stringData:
  # Database Secrets
  DATABASE_URL: "postgresql://username:REPLACE_WITH_STAGING_PASSWORD@postgres-service:5432/studyteddy_staging"
  DATABASE_USERNAME: "studyteddy_staging_user"
  DATABASE_PASSWORD: "REPLACE_WITH_STAGING_DATABASE_PASSWORD"

  # Redis Secrets
  REDIS_URL: "redis://redis-service:6379"
  REDIS_PASSWORD: "REPLACE_WITH_STAGING_REDIS_PASSWORD"

  # Authentication Secrets
  JWT_SECRET: "REPLACE_WITH_STAGING_JWT_SECRET_MINIMUM_64_CHARACTERS"
  JWT_REFRESH_SECRET: "REPLACE_WITH_STAGING_REFRESH_SECRET_MINIMUM_64_CHARACTERS"
  BETTER_AUTH_SECRET: "REPLACE_WITH_STAGING_BETTER_AUTH_SECRET_MINIMUM_64_CHARACTERS"
  NEXTAUTH_SECRET: "REPLACE_WITH_STAGING_NEXTAUTH_SECRET_MINIMUM_64_CHARACTERS"

  # OAuth Secrets
  GOOGLE_CLIENT_ID: "staging-google-client-id.apps.googleusercontent.com"
  GOOGLE_CLIENT_SECRET: "REPLACE_WITH_STAGING_GOOGLE_CLIENT_SECRET"

  # AI Service Secrets
  OPENAI_API_KEY: "REPLACE_WITH_STAGING_OPENAI_API_KEY"
  DEEPSEEK_API_KEY: "REPLACE_WITH_STAGING_DEEPSEEK_API_KEY"

  # Email Service Secrets
  SMTP_PASS: "REPLACE_WITH_STAGING_SENDGRID_API_KEY"
  RESEND_API_KEY: "REPLACE_WITH_STAGING_RESEND_API_KEY"

  # Storage Secrets
  AWS_ACCESS_KEY_ID: "REPLACE_WITH_STAGING_AWS_ACCESS_KEY"
  AWS_SECRET_ACCESS_KEY: "REPLACE_WITH_STAGING_AWS_SECRET_KEY"

  # Monitoring Secrets
  SENTRY_DSN: "https://staging-sentry-dsn@sentry.io/project-id"
  NEXT_PUBLIC_SENTRY_DSN: "https://staging-frontend-sentry-dsn@sentry.io/project-id"
  DATADOG_API_KEY: "REPLACE_WITH_STAGING_DATADOG_API_KEY"
  DATADOG_APP_KEY: "REPLACE_WITH_STAGING_DATADOG_APP_KEY"
  NEW_RELIC_LICENSE_KEY: "REPLACE_WITH_STAGING_NEW_RELIC_LICENSE_KEY"

  # External Service Secrets
  WEBHOOK_SECRET: "REPLACE_WITH_STAGING_WEBHOOK_SECRET"
  STRIPE_SECRET_KEY: "sk_test_staging_stripe_key"

  # Calendar Integration
  GOOGLE_CALENDAR_CLIENT_ID: "staging-google-calendar-client-id"
  GOOGLE_CALENDAR_CLIENT_SECRET: "REPLACE_WITH_STAGING_GOOGLE_CALENDAR_SECRET"

---
# ============================================
# Production Secrets
# ============================================
apiVersion: v1
kind: Secret
metadata:
  name: studyteddy-production-secrets
  namespace: studyteddy-production
  labels:
    app: studyteddy
    environment: production
type: Opaque
stringData:
  # Database Secrets
  DATABASE_URL: "postgresql://username:REPLACE_WITH_PRODUCTION_PASSWORD@postgres-service:5432/studyteddy_production"
  DATABASE_USERNAME: "studyteddy_prod_user"
  DATABASE_PASSWORD: "REPLACE_WITH_ULTRA_SECURE_PRODUCTION_DATABASE_PASSWORD"

  # Redis Secrets
  REDIS_URL: "redis://redis-service:6379"
  REDIS_PASSWORD: "REPLACE_WITH_ULTRA_SECURE_PRODUCTION_REDIS_PASSWORD"

  # Authentication Secrets (MUST BE CRYPTOGRAPHICALLY SECURE)
  JWT_SECRET: "REPLACE_WITH_CRYPTOGRAPHICALLY_SECURE_JWT_SECRET_MINIMUM_64_CHARACTERS"
  JWT_REFRESH_SECRET: "REPLACE_WITH_CRYPTOGRAPHICALLY_SECURE_REFRESH_SECRET_MINIMUM_64_CHARACTERS"
  BETTER_AUTH_SECRET: "REPLACE_WITH_CRYPTOGRAPHICALLY_SECURE_BETTER_AUTH_SECRET_MINIMUM_64_CHARACTERS"
  NEXTAUTH_SECRET: "REPLACE_WITH_CRYPTOGRAPHICALLY_SECURE_NEXTAUTH_SECRET_MINIMUM_64_CHARACTERS"

  # OAuth Secrets
  GOOGLE_CLIENT_ID: "production-google-client-id.apps.googleusercontent.com"
  GOOGLE_CLIENT_SECRET: "REPLACE_WITH_PRODUCTION_GOOGLE_CLIENT_SECRET"

  # AI Service Secrets
  OPENAI_API_KEY: "REPLACE_WITH_PRODUCTION_OPENAI_API_KEY"
  DEEPSEEK_API_KEY: "REPLACE_WITH_PRODUCTION_DEEPSEEK_API_KEY"

  # Email Service Secrets
  SMTP_PASS: "REPLACE_WITH_PRODUCTION_SENDGRID_API_KEY"
  RESEND_API_KEY: "REPLACE_WITH_PRODUCTION_RESEND_API_KEY"

  # Storage Secrets
  AWS_ACCESS_KEY_ID: "REPLACE_WITH_PRODUCTION_AWS_ACCESS_KEY"
  AWS_SECRET_ACCESS_KEY: "REPLACE_WITH_PRODUCTION_AWS_SECRET_KEY"

  # Monitoring Secrets
  SENTRY_DSN: "REPLACE_WITH_PRODUCTION_SENTRY_DSN"
  NEXT_PUBLIC_SENTRY_DSN: "REPLACE_WITH_PRODUCTION_FRONTEND_SENTRY_DSN"
  DATADOG_API_KEY: "REPLACE_WITH_PRODUCTION_DATADOG_API_KEY"
  DATADOG_APP_KEY: "REPLACE_WITH_PRODUCTION_DATADOG_APP_KEY"
  NEW_RELIC_LICENSE_KEY: "REPLACE_WITH_PRODUCTION_NEW_RELIC_LICENSE_KEY"

  # External Service Secrets
  WEBHOOK_SECRET: "REPLACE_WITH_PRODUCTION_WEBHOOK_SECRET"
  STRIPE_SECRET_KEY: "REPLACE_WITH_PRODUCTION_STRIPE_SECRET_KEY"
  STRIPE_WEBHOOK_SECRET: "REPLACE_WITH_PRODUCTION_STRIPE_WEBHOOK_SECRET"

  # Calendar Integration
  GOOGLE_CALENDAR_CLIENT_ID: "REPLACE_WITH_PRODUCTION_GOOGLE_CALENDAR_CLIENT_ID"
  GOOGLE_CALENDAR_CLIENT_SECRET: "REPLACE_WITH_PRODUCTION_GOOGLE_CALENDAR_CLIENT_SECRET"

  # Backup Encryption
  BACKUP_ENCRYPTION_KEY: "REPLACE_WITH_BACKUP_ENCRYPTION_KEY"

---
# ============================================
# TLS Secrets
# ============================================
apiVersion: v1
kind: Secret
metadata:
  name: studyteddy-tls-staging
  namespace: studyteddy-staging
  labels:
    app: studyteddy
    environment: staging
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  tls.crt: LS0tLS1CRUdJTi... # REPLACE_WITH_BASE64_ENCODED_STAGING_CERTIFICATE
  tls.key: LS0tLS1CRUdJTi... # REPLACE_WITH_BASE64_ENCODED_STAGING_PRIVATE_KEY

---
apiVersion: v1
kind: Secret
metadata:
  name: studyteddy-tls-production
  namespace: studyteddy-production
  labels:
    app: studyteddy
    environment: production
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  tls.crt: LS0tLS1CRUdJTi... # REPLACE_WITH_BASE64_ENCODED_PRODUCTION_CERTIFICATE
  tls.key: LS0tLS1CRUdJTi... # REPLACE_WITH_BASE64_ENCODED_PRODUCTION_PRIVATE_KEY

---
# ============================================
# Docker Registry Secret
# ============================================
apiVersion: v1
kind: Secret
metadata:
  name: studyteddy-registry-secret
  namespace: studyteddy-staging
  labels:
    app: studyteddy
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {
      "auths": {
        "registry.example.com": {
          "username": "REPLACE_WITH_REGISTRY_USERNAME",
          "password": "REPLACE_WITH_REGISTRY_PASSWORD",
          "auth": "REPLACE_WITH_BASE64_ENCODED_USERNAME_PASSWORD"
        }
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: studyteddy-registry-secret
  namespace: studyteddy-production
  labels:
    app: studyteddy
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {
      "auths": {
        "registry.example.com": {
          "username": "REPLACE_WITH_REGISTRY_USERNAME",
          "password": "REPLACE_WITH_REGISTRY_PASSWORD",
          "auth": "REPLACE_WITH_BASE64_ENCODED_USERNAME_PASSWORD"
        }
      }
    }

---
# ============================================
# Service Account Secrets
# ============================================
apiVersion: v1
kind: Secret
metadata:
  name: studyteddy-service-account-token
  namespace: studyteddy-production
  annotations:
    kubernetes.io/service-account.name: studyteddy-service-account
type: kubernetes.io/service-account-token

---
# ============================================
# External Secrets Configuration
# ============================================
# This example shows how to use External Secrets Operator
# to sync secrets from external secret management systems
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: studyteddy-vault-backend
  namespace: studyteddy-production
spec:
  provider:
    vault:
      server: "https://vault.example.com"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "studyteddy-role"

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: studyteddy-external-secrets
  namespace: studyteddy-production
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: studyteddy-vault-backend
    kind: SecretStore
  target:
    name: studyteddy-production-secrets
    creationPolicy: Owner
  data:
  - secretKey: DATABASE_PASSWORD
    remoteRef:
      key: database
      property: password
  - secretKey: JWT_SECRET
    remoteRef:
      key: auth
      property: jwt_secret
  - secretKey: OPENAI_API_KEY
    remoteRef:
      key: ai-services
      property: openai_key