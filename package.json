{
  "name": "studyteddy-monorepo",
  "version": "1.0.0",
  "description": "Study Teddy - AI-powered study planner monorepo",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "packageManager": "bun@1.2.22",
  "scripts": {
    "dev": "turbo run dev",
    "build": "bun scripts/build-packages.js && turbo run build",
    "build:packages": "bun scripts/build-packages.js",
    "lint": "turbo run lint",
    "test": "bun scripts/test.js",
    "test:e2e": "turbo run test:e2e",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:chrome": "playwright test --project=chrome",
    "test:e2e:firefox": "playwright test --project=firefox",
    "test:e2e:safari": "playwright test --project=safari",
    "test:e2e:edge": "playwright test --project=edge",
    "test:e2e:mobile": "playwright test --project=mobile-chrome --project=mobile-safari",
    "test:visual": "playwright test --project=visual-chrome",
    "test:performance": "k6 run tests/performance/load-test.js",
    "test:lighthouse": "lhci autorun",
    "test:lighthouse:mobile": "lhci autorun --config=lighthouse-mobile.config.js",
    "test:lighthouse:desktop": "lhci autorun --config=lighthouserc.js",
    "test:bundle-size": "bundlesize",
    "test:performance-budget": "node scripts/performance-budget.js",
    "analyze:bundle": "node scripts/bundle-analyzer.js",
    "test:all": "node scripts/test-runner.js",
    "test:all:fast": "node scripts/test-runner.js --fast",
    "test:all:html": "node scripts/test-runner.js --html",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "typecheck": "bun scripts/typecheck.js",
    "clean": "turbo run clean",
    "db:generate": "turbo run db:generate --filter=@studyteddy/backend",
    "db:push": "turbo run db:push --filter=@studyteddy/backend",
    "db:migrate": "turbo run db:migrate --filter=@studyteddy/backend",
    "db:studio": "turbo run db:studio --filter=@studyteddy/backend",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "validate:env": "bun scripts/validate-env.js",
    "validate:env:secrets": "bun scripts/validate-env.js generate-secrets",
    "validate:prod-env": "bun scripts/validate-production-env.js",
    "verify:setup": "bun scripts/verify-setup.js",
    "setup": "bun scripts/complete-setup.js",
    "fix:types": "bun scripts/fix-types.js",
    "deploy": "bun scripts/deploy-to-vercel.js",
    "deploy:production": "bun scripts/deploy-to-vercel.js production",
    "deploy:preview": "bun scripts/deploy-to-vercel.js preview",
    "deploy:pipeline": "bun scripts/ci-cd-pipeline.js",
    "setup:database": "bun scripts/setup-neon-database.js",
    "setup:vercel": "bun scripts/setup-vercel-env.js",
    "setup:monitoring": "bun scripts/setup-monitoring.js",
    "setup:staging": "bun scripts/setup-staging-environment.js",
    "backup:create": "bun scripts/backup-restore.js backup-all",
    "backup:restore": "bun scripts/backup-restore.js restore-db",
    "migration:generate": "bun scripts/migration-manager.js generate",
    "migration:run": "bun scripts/migration-manager.js migrate",
    "migration:status": "bun scripts/migration-manager.js status",
    "performance:check": "bun scripts/performance-check.js",
    "env:validate": "bun scripts/validate-env.ts",
    "env:validate:production": "bun scripts/validate-env.ts --env production --strict",
    "env:health": "bun scripts/health-check.ts",
    "env:health:monitor": "bun scripts/health-check.ts monitor",
    "secrets:generate": "bun scripts/security/generate-secrets.ts generate",
    "secrets:validate": "bun scripts/security/generate-secrets.ts validate",
    "secrets:display": "bun scripts/security/generate-secrets.ts display",
    "secrets:rotate": "bun scripts/security/rotate-secrets.ts rotate",
    "secrets:rotate:status": "bun scripts/security/rotate-secrets.ts status",
    "secrets:rotate:init": "bun scripts/security/rotate-secrets.ts init",
    "secrets:rotate:export": "bun scripts/security/rotate-secrets.ts export",
    "security:audit": "npm audit && bun audit",
    "security:headers:test": "curl -I -X GET https://studyteddy.com | grep -E 'X-Frame-Options|X-Content-Type|Strict-Transport-Security'",
    "setup:verify": "bun scripts/setup-verification.ts verify",
    "setup:interactive": "bun scripts/setup-verification.ts interactive",
    "setup:quick-check": "bun scripts/setup-verification.ts quick",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.1",
    "@types/node": "^22.10.7",
    "@typescript-eslint/eslint-plugin": "^8.20.0",
    "@typescript-eslint/parser": "^8.20.0",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^5.2.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-sonarjs": "^3.0.5",
    "eslint-plugin-unicorn": "^61.0.2",
    "husky": "^9.1.7",
    "lint-staged": "^15.2.10",
    "prettier": "^3.4.2",
    "turbo": "^2.3.4",
    "typescript": "^5.7.3",
    "@lhci/cli": "^0.14.0",
    "bundlesize": "^0.18.1",
    "pixelmatch": "^5.3.0",
    "sharp": "^0.33.5"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "bun": ">=1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mohamed-elkholy95/studyteddy.git"
  },
  "author": "Study Teddy Team",
  "license": "Microconnex",
  "dependencies": {
    "@radix-ui/react-toast": "^1.2.15"
  }
}